@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@{
    var tokens = Antiforgery.GetAndStoreTokens(Context);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="csrf-token" content="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
    <title>@ViewData["Title"] - BrodcastSocialMedia</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/BrodcastSocialMedia.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @RenderSection("Styles", required: false)

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body class="d-flex flex-column min-vh-100">

    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light custom-glass-navbar box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">BrodcastSocialMedia</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="TopBroadcasts">Top Broadcasts</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Explore">Explore</a>
                        </li>
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    <main role="main" class="pb-5" style="padding-bottom: 100px;">
        <div class="container mt-5 pt-5">
            @RenderBody()
        </div>2
    </main>

    <footer class="custom-glass-footer text-white py-2">
        <div class="text-center">
            &copy; 2025 - BrodcastSocialMedia -
            <a asp-controller="Home" asp-action="Privacy" class="text-white">Privacy</a>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        document.addEventListener("click", async function (e) {
            const button = e.target.closest(".listen-btn");
            if (!button) return;

            const userId = button.getAttribute("data-userid");
            const isListening = button.getAttribute("data-listening") === "true";
            const token = document.querySelector('meta[name="request-verification-token"]')?.content;

            const url = isListening ? "/Users/Unlisten" : "/Users/Listen";

            try {
                const res = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": token
                    },
                    body: JSON.stringify({ userId })
                });

                if (!res.ok) throw new Error("Failed to update");

                button.setAttribute("data-listening", (!isListening).toString());
                button.classList.toggle("btn-danger", !isListening);
                button.classList.toggle("btn-outline-light", isListening);
                button.innerText = !isListening ? "🔕 Unlisten" : "🎧 Listen";
            } catch (err) {
                console.error(err);
                alert("Something went wrong while updating listen state.");
            }
        });
    </script>
    
    

    <input type="hidden" id="__RequestVerificationToken" name="__RequestVerificationToken"
           value="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />
</body>
</html>
