@model HomeIndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>

    <h2>New Brodcast</h2>

    <form asp-action="Broadcast" method="post" enctype="multipart/form-data">
        <textarea asp-for="Message" placeholder="Say something..."></textarea>
        <input type="file" asp-for="Image" />
        <button type="submit">Broadcast</button>
    </form>

    

    <h2>Broadcasts</h2>

    @foreach (var broadcast in Model.Broadcasts)
    {
        <p>
            <b>
                @broadcast.UserName 
                (@broadcast.Published.ToShortDateString() @broadcast.Published.ToShortTimeString())
            </b>:
            @broadcast.Message
        </p>

        @if (!string.IsNullOrEmpty(broadcast.ImageUrl))
        {
            <div>
                <img src="@broadcast.ImageUrl" alt="Broadcast image" width="300" />
            </div>
        }

        <button class="like-button"
                data-broadcast-id="@broadcast.Id"
                onclick="toggleLike(this)">
            <i class="fa @(broadcast.IsLikedByCurrentUser ? "fa-heart" : "fa-heart-o")"></i>
            <span class="like-count">@broadcast.LikeCount</span>
        </button>

        <a href="#" onclick="showLikersModal(@broadcast.Id); return false;">View all who liked</a>


        <hr />

    }

    <div id="likersModal" style="display:none; position:fixed; top:10%; left:50%; transform:translateX(-50%);
     background:white; padding:20px; border:1px solid #ccc; box-shadow:0 0 10px rgba(0,0,0,0.3); z-index:1000;">
        <h3>Liked by</h3>
        <ul id="likersList"></ul>
        <button onclick="closeLikersModal()">Close</button>
    </div>

    @section Scripts {
        <script>
            async function toggleLike(button) {
                const broadcastId = button.getAttribute("data-broadcast-id");

                const response = await fetch("/Home/ToggleLike", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value
                    },
                    body: JSON.stringify(broadcastId)
                });

                if (!response.ok) return;

                const result = await response.json();

                
                button.querySelector(".like-count").innerText = result.likeCount;

                
                const icon = button.querySelector("i");
                icon.className = result.isLiked ? "fa fa-heart" : "fa fa-heart-o";
            }
        </script>

        <script>
            async function showLikersModal(broadcastId) {
                const response = await fetch(`/Home/GetLikers?broadcastId=${broadcastId}`);
                const users = await response.json();

                const list = document.getElementById("likersList");
                list.innerHTML = "";
                users.forEach(user => {
                    const li = document.createElement("li");
                    li.innerText = user;
                    list.appendChild(li);
                });

                document.getElementById("likersModal").style.display = "block";
            }

            function closeLikersModal() {
                document.getElementById("likersModal").style.display = "none";
            }
        </script>
    }

</div>
